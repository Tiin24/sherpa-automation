// src/features/navigator.js
const config = require('../core/config');

async function goToNextPage(page) {
  try {
    console.log('‚û°Ô∏è BUSCANDO PAGINADOR NUM√âRICO...');
    
    // Esperar paginador
    const paginationSelector = 'div.flex.justify-center.gap-1\\.5.pt-6';
    await page.waitForSelector(paginationSelector, {
      state: 'visible',
      timeout: config.TIMEOUT
    });

    // Verificar p√°gina actual
    const currentPageBtn = await page.$(`${paginationSelector} button.bg-sherpa-primary`);
    if (!currentPageBtn) throw new Error('No se pudo identificar la p√°gina actual');
    
    const currentPage = await currentPageBtn.textContent();
    if (currentPage === '2') {
      console.log('‚ÑπÔ∏è YA ESTAMOS EN LA P√ÅGINA 2');
      return true;
    }

    // Navegar a p√°gina 2
    console.log('üîÑ NAVEGANDO A P√ÅGINA 2...');
    const page2Button = await page.$(`${paginationSelector} button:nth-child(2)`);
    if (!page2Button) throw new Error('Bot√≥n de p√°gina 2 no encontrado');
    
    await page2Button.click();

    // Verificar con siglo XVIII
    console.log('üîç VERIFICANDO CARGA CON SIGLO XVII...');
    await page.waitForSelector('//span[normalize-space()="Siglo XVII"]', {
      state: 'visible',
      timeout: config.LONG_TIMEOUT
    });

    console.log('‚úÖ P√ÅGINA 2 CARGADA CORRECTAMENTE (VERIFICADO CON SIGLO XVII)');
    return true;

  } catch (error) {
    console.error('‚ùå ERROR EN NAVEGACI√ìN:', error.message);
    throw error;
  }
}

module.exports = { goToNextPage };